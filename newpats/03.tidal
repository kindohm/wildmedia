


do
  let ttt = modT 0.5 0.125 1.5 $ modT 0.5 0.125 1.5 $ ((range 0.125 1.5 $ slow 10 tri) * "0.28")
      pat = "{1@4 1@6 1@2 1@2 1 1 1 0@10 1 1 1 1 1@8 0 0 0}%16"
  d1
    $ someCyclesBy 0.5 (iter 8)
    $ shift
    $ someCyclesBy 0.5 rev
    $ shift
    $ rarely (|+ note 1)
    $ shift
    $ stack [
      struct pat $ sendTempo ttt
      , struct pat $ s "harmor" # midichan 2 # note "c5" # amp 1
      , struct (inv pat) $ s "harmor" # midichan 2 # note "c5" # amp 0.1
      , struct (inv pat) $ s "harmor" # midichan 3 # note "c5" # amp 1
      , struct pat $ s "harmor" # midichan 3 # note "c5" # amp 0.1
      , stutWith "{2 3 2}%16" 0.0625 (# midichan 3) $ struct pat $ s "syntakt" # midichan 0 # note "c5" # amp 1
      , struct (inv pat) $ s "syntakt" # midichan 2 # note "c5" # amp 1
      , mask pat $ s "syntakt*16" # midichan 1 # note "c5" # amp (range 0.2 1 $ shiftBy 4 $ rand)
    ]  # cpsWTF ttt
  d2
    $ slow 4 $ sometimesBy 0.5 (|+ note "12") $ s "syntakt" # midichan 4 # note "cs6" # amp 1
  p "prog" $ progNum "2*8" # s "syntakt" # midichan 13 



hush

do
  let pat = "{1@3 1@3 1 1 1}%8"
      g = (const $ s "~")
  d1
    $ degradeBy 0.4
    $ stack [
      rarely (off "{3e 3e}%16" (|+ note "{12 -12 12 24 -24}%16")) 
        $ amp pat # note (scale "prometheus" "{-1 1 -4 4 0 5}%16") # midichan 4 # s "syntakt"
    ] # cps (160/120/2)
  d2
    $ degradeBy 0.4
    $ someCyclesBy 0.5 (iter 8)
    $ (1 ~>)
    $ someCyclesBy 0.5 rev
    $ (1 ~>)
    $ rarely (stutWith (choose [24,8,16,12,32]) (choose [0.0625, (0.0625/2)])  (|* amp 0.6))
    $ stack [
        midichan "{0@3 0 1@3 2@3 3@12 3@3 0@3 3@6 1 1 1}%16" # s "syntakt" # note "c5" # amp 1
    ]
  p "prog" $ progNum "2*8" # s "syntakt" # midichan 13

  hush